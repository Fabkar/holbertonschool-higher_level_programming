The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------


Import ``matrix_divided`` from the ``2-matrix_divided`` module:
        >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Uses:

Checking docstring for module:
    >>> __import__('2-matrix_divided').__doc__ != None
    True

Checking standard values - basic test:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> print(matrix) # checks if return a new matrix
    [[1, 2, 3], [4, 5, 6]]

Checking division by a negative float:
    >>> print(matrix_divided(matrix, -2.5))
    [[-0.4, -0.8, -1.2], [-1.6, -2.0, -2.4]]

Checking a matrix with rows with different size:
    >>> matrix = [[1, 2, 3], [4, 5]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Checking when matrix has 1 element:
    >>> print(matrix_divided([[10]], 2))
    [[5.0]]

Checking for passing None as div:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, None)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Checking if a matrix is empty:
   >>> matrix = []
   >>> matrix_divided(matrix, 2)
   []

Checking if the divisor is 0:
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by Zero

Checking a matrix with different type of elements:
    >>> matrix = [[2, "Holberton", 4], [3, 7, 9]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking a matrix as string
    >>> matrix_divided("matrix", 4)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


